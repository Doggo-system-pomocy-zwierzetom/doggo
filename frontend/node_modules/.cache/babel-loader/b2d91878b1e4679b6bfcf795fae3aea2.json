{"ast":null,"code":"var _jsxFileName = \"D:\\\\projekt\\\\grupowy-pies\\\\frontend\\\\src\\\\views\\\\LoginView.tsx\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useState } from 'react';\n// import { MyContext } from '../contexts/MyContext';\n// export default function LoginView() {\n//   const { toggleNav, loginUser, isLoggedIn } = useContext(MyContext);\n//   const initialState = {\n//     userInfo: {\n//       email: '',\n//       password: '',\n//     },\n//     errorMsg: '',\n//     successMsg: '',\n//   };\n//   const [state, setState] = useState(initialState);\n//   // On change input value (email & password)\n//   const onChangeValue = (e: any) => {\n//     setState({\n//       ...state,\n//       userInfo: {\n//         ...state.userInfo,\n//         [e.target.name]: e.target.value,\n//       },\n//     });\n//   };\n//   // On Submit Login From\n//   const submitForm = async (event: any) => {\n//     event.preventDefault();\n//     const data = await loginUser(state.userInfo);\n//     if (data.success && data.token) {\n//       setState({\n//         ...initialState,\n//       });\n//       localStorage.setItem('loginToken', data.token);\n//       await isLoggedIn();\n//     } else {\n//       setState({\n//         ...state,\n//         successMsg: '',\n//         errorMsg: data.message,\n//       });\n//     }\n//   };\n//   // Show Message on Error or Success\n//   let successMsg: any = '';\n//   let errorMsg: any = '';\n//   if (state.errorMsg) {\n//     errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\n//   }\n//   if (state.successMsg) {\n//     successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\n//   }\n//   return (\n//     <div className=\"_loginRegister\">\n//       <h1>Login</h1>\n//       <form onSubmit={submitForm} noValidate>\n//         <div className=\"form-control\">\n//           <label>Email</label>\n//           <input\n//             name=\"email\"\n//             type=\"email\"\n//             required\n//             placeholder=\"Enter your email\"\n//             value={state.userInfo.email}\n//             onChange={onChangeValue}\n//           />\n//         </div>\n//         <div className=\"form-control\">\n//           <label>PassWord</label>\n//           <input\n//             name=\"password\"\n//             type=\"password\"\n//             required\n//             placeholder=\"Enter your password\"\n//             value={state.userInfo.password}\n//             onChange={onChangeValue}\n//           />\n//         </div>\n//         {errorMsg}\n//         {successMsg}\n//         <div className=\"form-control\">\n//           <button type=\"submit\">Login</button>\n//         </div>\n//       </form>\n//       <div className=\"_navBtn\">\n//         <button onClick={toggleNav}>Register</button>\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signin } from '../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginView() {\n  _s();\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  };\n  const [formData, setFormData] = useState(initialState);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if(isSignup) dispatch(signup(formData, history));\n    // else{\n\n    var res = dispatch(signin(formData, history));\n    console.log(res); // }\n  };\n\n  const handleChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const switchSignup = () => {\n    setIsSignup(!isSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/'); //przekierownie do strony głównej\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isSignup ? 'Zarejestruj się' : 'Zaloguj się', /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"firstName\",\n          placeholder: \"Imi\\u0119\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"lastName\",\n          placeholder: \"Nazwisko\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        placeholder: \"E-mail\",\n        type: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        placeholder: \"Has\\u0142o\",\n        type: showPassword ? 'text' : 'password',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), isSignup && /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        placeholder: \"Potwierd\\u017A has\\u0142o\",\n        type: showPassword ? 'text' : 'password',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isSignup ? 'Zarejestruj się' : 'Zaloguj się'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: switchSignup,\n        children: isSignup ? \"Posiadasz już konto? Zaloguj się\" : \"Nie posiadasz konta? Zarejestruj się\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginView, \"502brlmeSbRMUyal8ouWN6JfXF8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = LoginView;\nexport default LoginView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginView\");","map":{"version":3,"sources":["D:/projekt/grupowy-pies/frontend/src/views/LoginView.tsx"],"names":["React","useState","useDispatch","useHistory","signin","LoginView","isSignup","setIsSignup","showPassword","setShowPassword","dispatch","history","initialState","firstName","lastName","email","password","confirmpassword","formData","setFormData","handleSubmit","e","preventDefault","res","console","log","handleChange","target","name","value","handleShowPassword","switchSignup","googleSuccess","result","profileObj","token","tokenId","type","data","push","error","googleFailure","cursor"],"mappings":"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","sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import { MyContext } from '../contexts/MyContext';\r\n\r\n// export default function LoginView() {\r\n//   const { toggleNav, loginUser, isLoggedIn } = useContext(MyContext);\r\n\r\n//   const initialState = {\r\n//     userInfo: {\r\n//       email: '',\r\n//       password: '',\r\n//     },\r\n//     errorMsg: '',\r\n//     successMsg: '',\r\n//   };\r\n\r\n//   const [state, setState] = useState(initialState);\r\n\r\n//   // On change input value (email & password)\r\n//   const onChangeValue = (e: any) => {\r\n//     setState({\r\n//       ...state,\r\n//       userInfo: {\r\n//         ...state.userInfo,\r\n//         [e.target.name]: e.target.value,\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   // On Submit Login From\r\n//   const submitForm = async (event: any) => {\r\n//     event.preventDefault();\r\n//     const data = await loginUser(state.userInfo);\r\n//     if (data.success && data.token) {\r\n//       setState({\r\n//         ...initialState,\r\n//       });\r\n//       localStorage.setItem('loginToken', data.token);\r\n//       await isLoggedIn();\r\n//     } else {\r\n//       setState({\r\n//         ...state,\r\n//         successMsg: '',\r\n//         errorMsg: data.message,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Show Message on Error or Success\r\n//   let successMsg: any = '';\r\n//   let errorMsg: any = '';\r\n//   if (state.errorMsg) {\r\n//     errorMsg = <div className=\"error-msg\">{state.errorMsg}</div>;\r\n//   }\r\n//   if (state.successMsg) {\r\n//     successMsg = <div className=\"success-msg\">{state.successMsg}</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"_loginRegister\">\r\n//       <h1>Login</h1>\r\n//       <form onSubmit={submitForm} noValidate>\r\n//         <div className=\"form-control\">\r\n//           <label>Email</label>\r\n//           <input\r\n//             name=\"email\"\r\n//             type=\"email\"\r\n//             required\r\n//             placeholder=\"Enter your email\"\r\n//             value={state.userInfo.email}\r\n//             onChange={onChangeValue}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-control\">\r\n//           <label>PassWord</label>\r\n//           <input\r\n//             name=\"password\"\r\n//             type=\"password\"\r\n//             required\r\n//             placeholder=\"Enter your password\"\r\n//             value={state.userInfo.password}\r\n//             onChange={onChangeValue}\r\n//           />\r\n//         </div>\r\n//         {errorMsg}\r\n//         {successMsg}\r\n//         <div className=\"form-control\">\r\n//           <button type=\"submit\">Login</button>\r\n//         </div>\r\n//       </form>\r\n//       <div className=\"_navBtn\">\r\n//         <button onClick={toggleNav}>Register</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {signin} from '../actions/auth';\r\n\r\nfunction LoginView() {\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const initialState = {firstName: '', lastName: '', email: '', password:'', confirmpassword:''};\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const handleSubmit = (e:any) =>{\r\n        e.preventDefault(); \r\n        // if(isSignup) dispatch(signup(formData, history));\r\n        // else{\r\n            var res = dispatch(signin(formData, history));\r\n            console.log(res);\r\n        // }\r\n    };\r\n    const handleChange = (e:any) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const handleShowPassword = ()=>{\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const switchSignup = ()=>{\r\n        setIsSignup(!isSignup);\r\n        setShowPassword(false);\r\n    };\r\n    const googleSuccess = async (res:any) =>{\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try{\r\n            dispatch({type: 'AUTH', data: {result, token}});\r\n            history.push('/'); //przekierownie do strony głównej\r\n            \r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    const googleFailure = (error:any) =>{\r\n        console.log(error);\r\n    }\r\n    return(\r\n        <div>\r\n            {isSignup ? 'Zarejestruj się' : 'Zaloguj się'}\r\n            <form onSubmit={handleSubmit}>\r\n                {\r\n                    isSignup && (\r\n                        <>\r\n                        <input name=\"firstName\" placeholder=\"Imię\" onChange={handleChange}/>\r\n                        <input name=\"lastName\" placeholder=\"Nazwisko\" onChange={handleChange}/>\r\n                        </>\r\n                    )\r\n                }           \r\n                <input name=\"email\" placeholder=\"E-mail\" type=\"email\" onChange={handleChange}/>\r\n                <input name=\"password\" placeholder=\"Hasło\" type={showPassword ? 'text' : 'password'} onChange={handleChange}/>\r\n                {isSignup && <input name=\"confirmPassword\" placeholder=\"Potwierdź hasło\" type={showPassword ? 'text' : 'password'} onChange={handleChange}/>}\r\n                {/* <input type=\"checkbox\" onClick={handleShowPassword} checked={showPassword && \"checked\"} onChange={()=>{}}/>Pokaż hasło\r\n                <GoogleLogin \r\n                    clientId=\"730616782317-2no0659c4f0o88ch90c0vjkisu5dohnp.apps.googleusercontent.com\"\r\n                    render={(renderProps) => (\r\n                        <button \r\n                            type=\"button\" \r\n                            onClick={renderProps.onClick} \r\n                            disabled={renderProps.disabled}>\r\n                                Logowanie za pomocą konta Google\r\n                        </button>)}\r\n                    onSuccess={googleSuccess}\r\n                    onFailure={googleFailure}\r\n                    cookiePolicy=\"single_host_origin\"\r\n                /> */}\r\n                <button type=\"submit\">{isSignup ? 'Zarejestruj się' : 'Zaloguj się'}</button>\r\n                <p style={{cursor:\"pointer\"}} onClick={switchSignup}>{isSignup ? \"Posiadasz już konto? Zaloguj się\" : \"Nie posiadasz konta? Zarejestruj się\"}</p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginView;"]},"metadata":{},"sourceType":"module"}