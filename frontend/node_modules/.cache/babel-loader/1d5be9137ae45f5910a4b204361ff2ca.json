{"ast":null,"code":"var _jsxFileName = \"D:\\\\projekt\\\\grupowy-pies\\\\frontend\\\\src\\\\components\\\\UploadImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Alert, Button, Form } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledUploadImage = styled.div`\n  .image-preview {\n    max-width: 100%;\n    max-height: 300px;\n  }\n`;\n_c = StyledUploadImage;\nexport default function UploadImage(_ref) {\n  _s();\n\n  let {\n    setImageURL\n  } = _ref;\n  const [file, setFile] = useState('');\n  const [imagePreview, setImagePreview] = useState('');\n\n  const onFileSubmit = e => {\n    e.preventDefault();\n    if (file !== '') saveToServer(file);else console.log('Nie wybrano pliku!');\n  };\n\n  const photoUpload = e => {\n    e.preventDefault();\n    const reader = new FileReader();\n    const file2 = e.target.files[0]; // console.log('reader', reader);\n\n    if (reader !== undefined && file2 !== undefined) {\n      reader.onloadend = () => {\n        console.log(file);\n        setFile(file2);\n        setImagePreview(reader.result);\n      };\n\n      reader.readAsDataURL(file2);\n    }\n  };\n\n  function saveToServer(file) {\n    console.log(file);\n    fetch('https://api.imgur.com/3/image', {\n      //mode: 'cors',\n      method: 'POST',\n      headers: {\n        Authorization: 'Client-ID e938cb3d41df2b6'\n      },\n      body: file\n    }).then(response => {\n      console.log(response);\n\n      if (response.ok) {\n        // alert('Image uploaded to album');\n        // const url = JSON.parse(response).url;\n        console.log(response);\n        console.log('201');\n        return response.json();\n      }\n    }).then(json => {\n      console.log(json);\n      console.log(json.data.link); // insertToEditor(json.data.link);\n    }).catch(error => {\n      console.error(error); //alert('Upload failed: ' + error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledUploadImage, {\n    children: [imagePreview === '' ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"wybierz zdj\\u0119cie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image-preview\",\n      src: imagePreview,\n      alt: \"Podgl\\u0105d zdj\\u0119cia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: e => onFileSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        name: \"avatar\",\n        id: \"file\",\n        accept: \".jpef, .png, .jpg\",\n        onChange: photoUpload,\n        src: imagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        type: \"submit\",\n        children: \"Wy\\u015Blij\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadImage, \"MC4I6dIRozsuqBk4xdxDeO2L+h4=\");\n\n_c2 = UploadImage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledUploadImage\");\n$RefreshReg$(_c2, \"UploadImage\");","map":{"version":3,"sources":["D:/projekt/grupowy-pies/frontend/src/components/UploadImage.tsx"],"names":["useState","Alert","Button","Form","styled","StyledUploadImage","div","UploadImage","setImageURL","file","setFile","imagePreview","setImagePreview","onFileSubmit","e","preventDefault","saveToServer","console","log","photoUpload","reader","FileReader","file2","target","files","undefined","onloadend","result","readAsDataURL","fetch","method","headers","Authorization","body","then","response","ok","json","data","link","catch","error"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { Alert, Button, Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledUploadImage = styled.div`\r\n  .image-preview {\r\n    max-width: 100%;\r\n    max-height: 300px;\r\n  }\r\n`;\r\n\r\nexport default function UploadImage({ setImageURL }: any) {\r\n  const [file, setFile] = useState<string>('');\r\n  const [imagePreview, setImagePreview] = useState<any>('');\r\n\r\n  const onFileSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (file !== '') saveToServer(file);\r\n    else console.log('Nie wybrano pliku!');\r\n  };\r\n\r\n  const photoUpload = (e: any) => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    const file2 = e.target.files[0];\r\n    // console.log('reader', reader);\r\n\r\n    if (reader !== undefined && file2 !== undefined) {\r\n      reader.onloadend = () => {\r\n        console.log(file);\r\n\r\n        setFile(file2);\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file2);\r\n    }\r\n  };\r\n\r\n  function saveToServer(file: any) {\r\n    console.log(file);\r\n\r\n    fetch('https://api.imgur.com/3/image', {\r\n      //mode: 'cors',\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: 'Client-ID e938cb3d41df2b6',\r\n      },\r\n      body: file,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.ok) {\r\n          // alert('Image uploaded to album');\r\n          // const url = JSON.parse(response).url;\r\n          console.log(response);\r\n          console.log('201');\r\n          return response.json();\r\n        }\r\n      })\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.data.link);\r\n\r\n        // insertToEditor(json.data.link);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        //alert('Upload failed: ' + error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <StyledUploadImage>\r\n      {imagePreview === '' ? (\r\n        <Alert variant=\"info\">wybierz zdjęcie</Alert>\r\n      ) : (\r\n        <img className=\"image-preview\" src={imagePreview} alt=\"Podgląd zdjęcia\" />\r\n      )}\r\n      {/* <form onSubmit={(e) => onFileSubmit(e)} onChange={(e) => onChange(e)}> */}\r\n      <Form onSubmit={(e) => onFileSubmit(e)}>\r\n        {/* <form onSubmit={(e) => saveToServer()} onChange={(e) => onChange(e)}> */}\r\n        <Form.Control\r\n          type=\"file\"\r\n          name=\"avatar\"\r\n          id=\"file\"\r\n          accept=\".jpef, .png, .jpg\"\r\n          onChange={photoUpload}\r\n          src={imagePreview}\r\n        />\r\n        <Button variant=\"secondary\" type=\"submit\">\r\n          Wyślij\r\n        </Button>\r\n      </Form>\r\n    </StyledUploadImage>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}