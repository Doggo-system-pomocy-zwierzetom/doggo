{"ast":null,"code":"var _jsxFileName = \"D:\\\\projekt\\\\grupowy-pies\\\\frontend\\\\src\\\\contexts\\\\MyContext.tsx\";\nimport React, { createContext, Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext(undefined); // Define the base URL\n\nconst Axios = axios.create({\n  baseURL: 'http://localhost/php-login-registration-api/'\n});\n\nclass MyContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLogin: true,\n      isAuth: false,\n      theUser: null\n    };\n\n    this.toggleNav = () => {\n      const showLogin = !this.state.showLogin;\n      this.setState({ ...this.state,\n        showLogin\n      });\n    };\n\n    this.logoutUser = () => {\n      localStorage.removeItem('loginToken');\n      this.setState({ ...this.state,\n        isAuth: false\n      });\n    };\n\n    this.registerUser = async user => {\n      // Sending the user registration request\n      const register = await Axios.post('register.php', {\n        name: user.name,\n        email: user.email,\n        password: user.password\n      });\n      return register.data;\n    };\n\n    this.loginUser = async user => {\n      // Sending the user Login request\n      const login = await Axios.post('login.php', {\n        email: user.email,\n        password: user.password\n      });\n      return login.data;\n    };\n\n    this.isLoggedIn = async () => {\n      const loginToken = localStorage.getItem('loginToken'); // If inside the local-storage has the JWT token\n\n      if (loginToken) {\n        //Adding JWT token to axios default header\n        Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken; // Fetching the user information\n\n        const {\n          data\n        } = await Axios.get('user-info.php'); // If user information is successfully received\n\n        if (data.success && data.user) {\n          this.setState({ ...this.state,\n            isAuth: true,\n            theUser: data.user\n          });\n        }\n      }\n    };\n\n    this.isLoggedIn();\n  } // Root State\n\n\n  render() {\n    const contextValue = {\n      rootState: this.state,\n      toggleNav: this.toggleNav,\n      isLoggedIn: this.isLoggedIn,\n      registerUser: this.registerUser,\n      loginUser: this.loginUser,\n      logoutUser: this.logoutUser\n    };\n    return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: contextValue,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default MyContextProvider;","map":{"version":3,"sources":["D:/projekt/grupowy-pies/frontend/src/contexts/MyContext.tsx"],"names":["React","createContext","Component","axios","MyContext","undefined","Axios","create","baseURL","MyContextProvider","constructor","props","state","showLogin","isAuth","theUser","toggleNav","setState","logoutUser","localStorage","removeItem","registerUser","user","register","post","name","email","password","data","loginUser","login","isLoggedIn","loginToken","getItem","defaults","headers","common","get","success","render","contextValue","rootState","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,SAAS,gBAAGH,aAAa,CAAMI,SAAN,CAA/B,C,CAEP;;AACA,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE;AADgB,CAAb,CAAd;;AAIA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AADsB,SAMxBC,KANwB,GAMhB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE,KAFF;AAGNC,MAAAA,OAAO,EAAE;AAHH,KANgB;;AAAA,SAaxBC,SAbwB,GAaZ,MAAM;AAChB,YAAMH,SAAS,GAAG,CAAC,KAAKD,KAAL,CAAWC,SAA9B;AACA,WAAKI,QAAL,CAAc,EACZ,GAAG,KAAKL,KADI;AAEZC,QAAAA;AAFY,OAAd;AAID,KAnBuB;;AAAA,SAsBxBK,UAtBwB,GAsBX,MAAM;AACjBC,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACA,WAAKH,QAAL,CAAc,EACZ,GAAG,KAAKL,KADI;AAEZE,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KA5BuB;;AAAA,SA8BxBO,YA9BwB,GA8BT,MAAOC,IAAP,IAAqB;AAClC;AACA,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,cAAX,EAA2B;AAChDC,QAAAA,IAAI,EAAEH,IAAI,CAACG,IADqC;AAEhDC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFoC;AAGhDC,QAAAA,QAAQ,EAAEL,IAAI,CAACK;AAHiC,OAA3B,CAAvB;AAMA,aAAOJ,QAAQ,CAACK,IAAhB;AACD,KAvCuB;;AAAA,SAyCxBC,SAzCwB,GAyCZ,MAAOP,IAAP,IAAqB;AAC/B;AACA,YAAMQ,KAAK,GAAG,MAAMxB,KAAK,CAACkB,IAAN,CAAW,WAAX,EAAwB;AAC1CE,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAD8B;AAE1CC,QAAAA,QAAQ,EAAEL,IAAI,CAACK;AAF2B,OAAxB,CAApB;AAIA,aAAOG,KAAK,CAACF,IAAb;AACD,KAhDuB;;AAAA,SAmDxBG,UAnDwB,GAmDX,YAAY;AACvB,YAAMC,UAAU,GAAGb,YAAY,CAACc,OAAb,CAAqB,YAArB,CAAnB,CADuB,CAGvB;;AACA,UAAID,UAAJ,EAAgB;AACd;AACA1B,QAAAA,KAAK,CAAC4B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYJ,UAA7D,CAFc,CAId;;AACA,cAAM;AAAEJ,UAAAA;AAAF,YAAgB,MAAMtB,KAAK,CAAC+B,GAAN,CAAU,eAAV,CAA5B,CALc,CAOd;;AACA,YAAIT,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACN,IAAzB,EAA+B;AAC7B,eAAKL,QAAL,CAAc,EACZ,GAAG,KAAKL,KADI;AAEZE,YAAAA,MAAM,EAAE,IAFI;AAGZC,YAAAA,OAAO,EAAEa,IAAI,CAACN;AAHF,WAAd;AAKD;AACF;AACF,KAvEuB;;AAEtB,SAAKS,UAAL;AACD,GAJuC,CAMxC;;;AAoEAQ,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBC,MAAAA,SAAS,EAAE,KAAK7B,KADG;AAEnBI,MAAAA,SAAS,EAAE,KAAKA,SAFG;AAGnBe,MAAAA,UAAU,EAAE,KAAKA,UAHE;AAInBV,MAAAA,YAAY,EAAE,KAAKA,YAJA;AAKnBQ,MAAAA,SAAS,EAAE,KAAKA,SALG;AAMnBX,MAAAA,UAAU,EAAE,KAAKA;AANE,KAArB;AAQA,wBAAO,QAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,KAAK,EAAEsB,YAA3B;AAAA,gBAA0C,KAAK7B,KAAL,CAAW+B;AAArD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AApFuC;;AAuF1C,eAAejC,iBAAf","sourcesContent":["import React, { createContext, Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const MyContext = createContext<any>(undefined);\r\n\r\n// Define the base URL\r\nconst Axios = axios.create({\r\n  baseURL: 'http://localhost/php-login-registration-api/',\r\n});\r\n\r\nclass MyContextProvider extends Component {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.isLoggedIn();\r\n  }\r\n\r\n  // Root State\r\n  state = {\r\n    showLogin: true,\r\n    isAuth: false,\r\n    theUser: null,\r\n  };\r\n\r\n  // Toggle between Login & Sign up page\r\n  toggleNav = () => {\r\n    const showLogin = !this.state.showLogin;\r\n    this.setState({\r\n      ...this.state,\r\n      showLogin,\r\n    });\r\n  };\r\n\r\n  // On Click the Log out button\r\n  logoutUser = () => {\r\n    localStorage.removeItem('loginToken');\r\n    this.setState({\r\n      ...this.state,\r\n      isAuth: false,\r\n    });\r\n  };\r\n\r\n  registerUser = async (user: any) => {\r\n    // Sending the user registration request\r\n    const register = await Axios.post('register.php', {\r\n      name: user.name,\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n\r\n    return register.data;\r\n  };\r\n\r\n  loginUser = async (user: any) => {\r\n    // Sending the user Login request\r\n    const login = await Axios.post('login.php', {\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n    return login.data;\r\n  };\r\n\r\n  // Checking user logged in or not\r\n  isLoggedIn = async () => {\r\n    const loginToken = localStorage.getItem('loginToken');\r\n\r\n    // If inside the local-storage has the JWT token\r\n    if (loginToken) {\r\n      //Adding JWT token to axios default header\r\n      Axios.defaults.headers.common['Authorization'] = 'bearer ' + loginToken;\r\n\r\n      // Fetching the user information\r\n      const { data }: any = await Axios.get('user-info.php');\r\n\r\n      // If user information is successfully received\r\n      if (data.success && data.user) {\r\n        this.setState({\r\n          ...this.state,\r\n          isAuth: true,\r\n          theUser: data.user,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const contextValue = {\r\n      rootState: this.state,\r\n      toggleNav: this.toggleNav,\r\n      isLoggedIn: this.isLoggedIn,\r\n      registerUser: this.registerUser,\r\n      loginUser: this.loginUser,\r\n      logoutUser: this.logoutUser,\r\n    };\r\n    return <MyContext.Provider value={contextValue}>{this.props.children}</MyContext.Provider>;\r\n  }\r\n}\r\n\r\nexport default MyContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}